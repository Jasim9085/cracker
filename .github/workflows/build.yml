name: Build Android Native Binaries (ndk-build)

on: [push]

jobs:
  build-native-code:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Android NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r25c
          add-to-path: true

      - name: Create ndk-build project structure
        run: |
          mkdir -p jni/libpcap
          cp src/main/cpp/native-lib.c jni/
          cp src/main/cpp/wifi_scanner.c jni/

      - name: Create Application.mk
        run: |
          echo "APP_PLATFORM := android-19" > jni/Application.mk
          echo "APP_ABI := armeabi-v7a arm64-v8a" >> jni/Application.mk

      # --- Build libpcap from source ---
      - name: Get and Build libpcap for all ABIs
        run: |
          # Install build dependencies for libpcap
          sudo apt-get update
          sudo apt-get install -y autoconf automake libtool byacc flex
          
          git clone https://github.com/the-tcpdump-group/libpcap.git
          cd libpcap
          
          # --- THIS IS THE MISSING STEP ---
          ./autogen.sh
          
          # 32-bit build
          ./configure --host=arm-linux-androideabi --disable-shared --enable-static CC="clang --target=armv7a-linux-androideabi19"
          make
          cp libpcap.a ../jni/libpcap/libpcap-armeabi-v7a.a
          
          # 64-bit build
          make clean
          ./configure --host=aarch64-linux-android --disable-shared --enable-static CC="clang --target=aarch64-linux-android21"
          make
          cp libpcap.a ../jni/libpcap/libpcap-arm64-v8a.a

      # --- Create the final Android.mk file ---
      - name: Create Android.mk
        run: |
          cat <<'EOF' > jni/Android.mk
          LOCAL_PATH := $(call my-dir)

          # --- Build libcracker.so ---
          include $(CLEAR_VARS)
          LOCAL_MODULE    := cracker
          LOCAL_SRC_FILES := native-lib.c
          include $(BUILD_SHARED_LIBRARY)

          # --- Link libpcap as a prebuilt static library ---
          include $(CLEAR_VARS)
          LOCAL_MODULE := libpcap-prebuilt
          LOCAL_SRC_FILES := libpcap/libpcap-$(TARGET_ARCH_ABI).a
          include $(PREBUILT_STATIC_LIBRARY)

          # --- Build wifi_scanner executable ---
          include $(CLEAR_VARS)
          LOCAL_MODULE    := wifi_scanner
          LOCAL_SRC_FILES := wifi_scanner.c
          LOCAL_STATIC_LIBRARIES := libpcap-prebuilt
          include $(BUILD_EXECUTABLE)
          EOF

      # --- Run ndk-build ---
      - name: Run ndk-build
        run: ndk-build NDK_PROJECT_PATH=.

      # --- Prepare Artifacts ---
      - name: Prepare Artifacts
        run: |
          mkdir -p artifacts/libs/armeabi-v7a
          mkdir -p artifacts/libs/arm64-v8a
          mkdir -p artifacts/assets/armeabi-v7a
          mkdir -p artifacts/assets/arm64-v8a
          cp libs/armeabi-v7a/libcracker.so artifacts/libs/armeabi-v7a/
          cp libs/arm64-v8a/libcracker.so artifacts/libs/arm64-v8a/
          cp obj/local/armeabi-v7a/wifi_scanner artifacts/assets/armeabi-v7a/
          cp obj/local/arm64-v8a/wifi_scanner artifacts/assets/arm64-v8a/
          
      # --- Upload the final artifacts ---
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: native-binaries
          path: artifacts/
